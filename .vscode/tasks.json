{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "cmake-configure",
            "type": "shell",
            "command": "cmake",
            "args": [
				"-S",
                ".",
                "-B",
                "build",
                "-G",
                // "Visual Studio 17 2022", // 指定 MSVC 的生成器（根据你的 VS 版本调整）
                // "-A",
                // "x64",                   // 指定目标架构（如 x64）
                "Ninja",
                "-DCMAKE_C_COMPILER=C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64\\cl.exe",
                "-DCMAKE_CXX_COMPILER=C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64\\cl.exe",
                "-DCMAKE_LINKER=C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64\\link.exe",
                "-DCMAKE_RC_COMPILER=C:/\"Program Files (x86)\"/Windows Kits/10/bin/10.0.22621.0/x64/rc.exe",
                "-DCMAKE_MT=C:/\"Program Files (x86)\"/Windows Kits/10/bin/10.0.22621.0/x64/mt.exe",
                "-DCMAKE_MC_COMPILER=C:/\"Program Files (x86)\"/Windows Kits/10/bin/10.0.22621.0/x64/mc.exe",
                "-DCMAKE_EXPORT_COMPILE_COMMANDS=ON",
                "-DCMAKE_BUILD_TYPE=Debug",
                "-DCMAKE_CXX_FLAGS=/EHsc /W3 /MP /Zi /FS /showIncludes /MDd /D_ITERATOR_DEBUG_LEVEL=2", // Add /MDd here too
                "-DCMAKE_C_FLAGS=/EHsc /W3 /MP /Zi /FS /showIncludes /MDd /D_ITERATOR_DEBUG_LEVEL=2",   // Add for consistency
                "-DCMAKE_TOOLCHAIN_FILE=C:\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake",
				"-DCMAKE_RUNTIME_OUTPUT_DIRECTORY=${workspaceFolder}/build/bin",
				"-DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${workspaceFolder}/build/lib",
				"-DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=${workspaceFolder}/build/lib",
                "-DVCPKG_TARGET_TRIPLET=x64-windows"
                
            ],
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "PATH": "C:/Tools;C:\\Program Files\\CMake\\bin;C:\\Qt\\Qt5.9.5\\5.9.5\\msvc2017_64\\bin",
                    "INCLUDE": "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.16.27023/include;C:/Program Files (x86)/Windows Kits/10/Include/10.0.22621.0/ucrt;C:/Program Files (x86)/Windows Kits/10/Include/10.0.22621.0/um;C:/Program Files (x86)/Windows Kits/10/Include/10.0.22621.0/shared;",
                    "LIB": "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.16.27023/lib/x64;C:/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/ucrt/x64;C:/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/um/x64;"
                }
            },
            "group": {
                "kind": "build",
                "isDefault": false
            },
            // "dependsOn": "Generate Qt Resources",
            "problemMatcher": [
                "$msCompile"
            ],
            "detail": "1.Cmake configure used Ninja to build project"
        },
        {
            "label": "cmake-build",
            "type": "shell",
            "command": "ninja",
            "args": [
				"-C",
                "build",
            ],
            "options": {
                
                "cwd": "${workspaceFolder}",
                "env": {
                    "PATH": "C:/Tools;C:\\Program Files\\CMake\\bin;C:\\Qt\\Qt5.9.5\\5.9.5\\msvc2017_64\\bin;C:/Windows/System32/WindowsPowerShell/v1.0/",
                    "INCLUDE": "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.16.27023/include;C:/Program Files (x86)/Windows Kits/10/Include/10.0.22621.0/ucrt;C:/Program Files (x86)/Windows Kits/10/Include/10.0.22621.0/um;C:/Program Files (x86)/Windows Kits/10/Include/10.0.22621.0/shared;",
                    "LIB": "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Tools/MSVC/14.16.27023/lib/x64;C:/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/ucrt/x64;C:/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/um/x64;",
                }
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": "cmake-configure",
            "problemMatcher": [
                "$msCompile"
            ],
            "detail": "3.Build the project by Ninja"
        },
        {
            "label": "cmake-clean",
            "type": "shell",
            "command": "ninja",
            "args": [
                "-C",
                "build",
                "-t",
                "clean"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [
                "$msCompile"
            ],
            "detail": "5.Use ninja to clean the project"
        },
        {
            "label": "add-env-to-cmakelists",
            "type": "shell",
            "command": "node",
            "args": [
                ".vscode/node-script/add_to_cmake.js"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "detail": "2.Add include_directories and link_directories to CMakeLists.txt"
        },
        {
            "label": "generate-launch",
            "type": "shell",
            "command": "node",
            "args": [
                "${workspaceFolder}/.vscode/node-script/generate_launch.js"
            ],
            "group": {
                "kind": "build"
            },
            "dependsOn": "cmake-build",
            "problemMatcher": [],
            "detail": "4.Generate launch.json for users to debug,especially for tests exe."
        },
        {
            "label": "Generate Qt Resources",
            "type": "shell",
            "command": "node",
            "args": [
                "${workspaceFolder}/.vscode/node-script/qrc-snippets.js"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "0.Generate Qt's resource compiler"
        }
    ]
}